// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$String = require("bs-platform/lib/js/string.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

function resolve_action(str) {
  switch (str) {
    case "(" : 
        return /* UP */1;
    case ")" : 
        return /* DOWN */2;
    default:
      return /* NONE */0;
  }
}

function calculate_floor(data, _floor, _index) {
  while(true) {
    var index = _index;
    var floor = _floor;
    var len = data.length;
    if (index < len) {
      var action = resolve_action($$String.make(1, Caml_string.get(data, index)));
      var next_floor;
      switch (action) {
        case 0 : 
            next_floor = floor;
            break;
        case 1 : 
            next_floor = floor + 1 | 0;
            break;
        case 2 : 
            next_floor = floor - 1 | 0;
            break;
        
      }
      var next_index = index + 1 | 0;
      _index = next_index;
      _floor = next_floor;
      continue ;
    } else {
      return floor;
    }
  };
}

var UnknownError = Caml_exceptions.create("AOC2015_1.UnknownError");

function solve(data) {
  return Promise.resolve(calculate_floor(data, 0, 0));
}

exports.resolve_action = resolve_action;
exports.calculate_floor = calculate_floor;
exports.UnknownError = UnknownError;
exports.solve = solve;
/* No side effect */
