// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

function parse_paper(str) {
  var arr = str.split("x");
  var mapped = $$Array.to_list($$Array.map(Caml_format.caml_int_of_string, arr));
  if (List.length(mapped) >= 3) {
    var l = List.nth(mapped, 0);
    var w = List.nth(mapped, 1);
    var h = List.nth(mapped, 2);
    return /* record */[
            /* h */h,
            /* w */w,
            /* l */l
          ];
  } else {
    return /* record */[
            /* h */0,
            /* w */0,
            /* l */0
          ];
  }
}

function int_comparator(a, b) {
  var match = a > b;
  if (match) {
    return 1;
  } else {
    return -1;
  }
}

function calculate_paper(p) {
  var side_a = Caml_int32.imul(p[/* l */2], p[/* w */1]);
  var side_b = Caml_int32.imul(p[/* l */2], p[/* h */0]);
  var side_c = Caml_int32.imul(p[/* h */0], p[/* w */1]);
  var sides = List.sort(int_comparator, /* :: */[
        side_a,
        /* :: */[
          side_b,
          /* :: */[
            side_c,
            /* [] */0
          ]
        ]
      ]);
  var smallest = List.hd(sides);
  return List.fold_left((function (acc, item) {
                return acc + (item << 1) | 0;
              }), 0, sides) + smallest | 0;
}

function calculate_wrapping_paper(_data, _result) {
  while(true) {
    var result = _result;
    var data = _data;
    if (data) {
      var p = parse_paper(data[0]);
      var acc = result + calculate_paper(p) | 0;
      _result = acc;
      _data = data[1];
      continue ;
    } else {
      return result;
    }
  };
}

function solve(rawdata) {
  var data = $$Array.to_list(rawdata.trim().split("\n"));
  return Promise.resolve(calculate_wrapping_paper(data, 0));
}

exports.parse_paper = parse_paper;
exports.int_comparator = int_comparator;
exports.calculate_paper = calculate_paper;
exports.calculate_wrapping_paper = calculate_wrapping_paper;
exports.solve = solve;
/* No side effect */
